public class RabinKarpAlgorithm {

	public static final int d = 256;

	public static void searchPattern(String txt, String pat, int prime) {
		int t = 0, p = 0, h = 1, i, j;
		// calculate numerical value of pattern and first window of text
		for (i = 0; i < pat.length(); i++) {
			p = (p * d + pat.charAt(i)) % prime;
			t = (t * d + txt.charAt(i)) % prime;
		}
		// calculate value of hash function h = Math.pow(d, n-1)
		for (i = 0; i < pat.length() - 1; i++) {
			h = (h * d) % prime;
		}
		// to check if pattern exists in the string
		for (i = 0; i <= (txt.length() - pat.length()); i++) {
			if (p == t) {
				for (j = 0; j < pat.length(); j++) {
					if (txt.charAt(i + j) != txt.charAt(j)) {
						break;
					}
				}
				if (j == pat.length()) {
					System.out.println("Pattern match found at index: " + i);
				}

			}
			// slide to the next window in the text
			if (i < (txt.length() - pat.length())) {
				t = (d * (t - txt.charAt(i) * h) + txt.charAt(i + pat.length())) % prime;
				if (t < 0) {
					t += prime;
				}
			}
		}
	}

	public static void main(String[] args) {
		String txt = "THIS ALGORITHMIS FUN TO LEARN.THIS ALGORITHM IS MORE EFFICIENT THAN YOU THINK";
		String pat = "ALGORITHM";
		int q = 101; // A prime number
		searchPattern(txt, pat, q);
	}

}
